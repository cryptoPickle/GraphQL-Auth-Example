{
  "name": "authmicroservice",
  "version": "1.0.0",
  "main": "index.js",
  "license": "MIT",
  "author": "Halil Irmak",
  "dependencies": {
    "babel-loader": "^7.1.5",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-stage-0": "^6.24.1",
    "babel-register": "^6.26.0",
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.18.3",
    "cors": "^2.8.4",
    "dotenv": "^6.0.0",
    "express": "^4.16.3",
    "express-graphql": "^0.6.12",
    "graphql": "^0.13.2",
    "graphql-tools": "^3.1.1",
    "jsonwebtoken": "^8.3.0",
    "knex": "^0.15.2",
    "moment": "^2.22.2",
    "morgan": "^1.9.0",
    "nodemailer": "^4.6.7",
    "nodemailer-mailgun-transport": "^1.4.0",
    "objection": "^1.2.2",
    "passport": "^0.4.0",
    "passport-facebook": "^2.1.1",
    "passport-google-oauth20": "^1.0.0",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pg": "^7.4.3",
    "uuid": "^3.3.2"
  },
  "devDependencies": {
    "dotenv-webpack": "^1.5.7",
    "webpack": "^4.16.5",
    "webpack-cli": "^3.1.0",
    "webpack-merge": "^4.1.4",
    "webpack-node-externals": "^1.7.2"
  },
  "scripts": {
    "dev": "NODE_ENV='development'  nodemon --inspect ./src/start.babel.js",
    "dev:server": "NODE_ENV='production' npm run build:server:once && npm-run-all --parallel nodemon watch:server",
    "prod:server": "NODE_ENV='production' pm2 start ",
    "preprod:server": "rm -f $(pwd)/dist/* && node utils/loadgraphqlFiles.js && npm run build:server:once && npm run migrate",
    "postprod:server": "npm run pm2:log",
    "migrate": "knex migrate:latest",
    "rollback": "knex migrate:rollback",
    "migrate:run": "npm run migrate && npm run dev",
    "build:server:once": "NODE_ENV='development' webpack --config webpack.config.js ",
    "prebuild:server:once": "rm -f $(pwd)/dist/* && node utils/loadgraphqlFiles.js",
    "watch:server": "NODE_ENV='development' webpack --config webpack.config.js --watch",
    "nodemon": "NODE_ENV='development' node-dev dist/server.prod.js",
    "pm2:monitor": "pm2 monit",
    "pm2:kill": "pm2 kill",
    "pm2:log": "pm2 logs --lines 1000",
    "restart": "pm2 reload all"
  }
}
